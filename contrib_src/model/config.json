{
    "id": "20fb032f-7a5b-4a2b-9ab8-367ee53030ea",
    "meta": {
        "name": "deepscan-brats",
        "application_area": "Medical Imaging, Segmentation",
        "task": "Brain Tumor Segmentation",
        "task_extended": "Brain tumor segmentation for the BraTS 18 challenge",
        "data_type": "Nifti-1 volumes",
        "data_source": "www.braintumorsegmentation.org"
    },
    "publication": {
        "title": "Ensembles of Densely-Connected CNNs with Label-Uncertainty for Brain Tumor Segmentation",
        "source": "International MICCAI Brainlesion Workshop",
        "year": 2018,
        "authors": "Richard McKinley, Raphael Meier, Roland Wiest",
        "email": "richard.mckinley@gmail.com",
        "abstract": "We introduce a new family of classifiers based on our previous DeepSCAN architecture, in which densely connected blocks of dilated convolutions are embedded in a shallow U-net-style structure of down/upsampling and skip connections. These networks are trained using a newly designed loss function which models label noise and uncertainty. We present results on the testing dataset of the Multimodal Brain Tumor Segmentation Challenge 2018.",
        "url": "https://link.springer.com/chapter/10.1007/978-3-030-11726-9_40",
        "google_scholar": "https://scholar.google.com/scholar?hl=en&as_sdt=0%2C5&as_ylo=2018&q=Ensembles+of+densely-connected+CNNs+with+label-uncertainty+for+brain+tumor+segmentation&btnG=",
        "bibtex": "@inproceedings{mckinley2018ensembles,title={Ensembles of densely-connected CNNs with label-uncertainty for brain tumor segmentation},author={McKinley, Richard and Meier, Raphael and Wiest, Roland},booktitle={International MICCAI Brainlesion Workshop},pages={456--465},year={2018},organization={Springer}}"
      },
    "model": {
        "description": "Densely-Connected CNNs",
        "provenance": "",
        "architecture": "CNN",
        "learning_type": "Supervised",
        "format": ".pth.tar",
        "io": {
            "input": {
                "format": ["application/json"],
                "t1": {
                    "format" : ["application/nii-gzip"],
                    "dim_limits": [{
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    }
                    ]
                },
                "t1c": {
                    "format" : ["application/nii-gzip"],
                    "dim_limits": [{
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    }
                    ]
                },
                "t2": {
                    "format" : ["application/nii-gzip"],
                    "dim_limits": [{
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    }
                    ]
                },
                "flair": {
                    "format" : ["application/nii-gzip"],
                    "dim_limits": [{
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    },
                    {
                        "min": 155,
                        "max": 240
                    }
                    ]
                }
            },
            "output": [{
                "name": "Segmentation",
                "type": "image",
                "description": "Numpy array of shape (240,240,155) with labels. Needs header from one of the input images to save to file."
            }]
        }
    },
    "modelhub": {}
}
